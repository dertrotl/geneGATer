[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "geneGATer"
version = "0.0.2"
description = "Pipeline to identify communication genes and rank them by their importance."
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Benjamin Weinert"},
]
maintainers = [
    {name = "Benjamin Weinert", email = "bweinert.application@gmail.com"},
]
urls.Documentation = "https://geneGATer.readthedocs.io/"
urls.Source = "https://github.com/dertrotl/geneGATer"
urls.Home-page = "https://github.com/dertrotl/geneGATer"
dependencies = [
    "anndata",
    "aiobotocore">=2.5.4
    "aiohttp">=3.8.5
    "aioitertools">=0.11.0
    "aiosignal">=1.3.1
    "anndata">=0.10.0
    "anyio">=4.0.0
    "appnope">=0.1.3
    "argon2-cffi">=23.1.0
    "argon2-cffi-bindings">=21.2.0
    "array-api-compat">=1.4
    "arrow">=1.3.0
    "asciitree">=0.3.3
    "asttokens">=2.4.0
    "async-lru">=2.0.4
    "async-timeout">=4.0.3
    "attrs">=23.1.0
    "Babel">=2.13.0
    "backcall">=0.2.0
    "beautifulsoup4">=4.12.2
    "bleach">=6.0.0
    "botocore">=1.31.17
    "certifi">=2023.7.22
    "cffi">=1.16.0
    "click-plugins">=1.1.1
    "cligj">=0.7.2
    "cloudpickle">=2.2.1
    "colorcet">=3.0.1
    "comm">=0.1.4
    "contourpy">=1.1.1
    "cycler">=0.12.0
    "dask">=2023.9.3
    "dask-image">=2023.8.1
    "datashader">=0.15.2
    "datashape">=0.5.2
    "debugpy">=1.8.0
    "decorator">=5.1.1
    "defusedxml">=0.7.1
    "distributed">=2023.9.3
    "docker-pycreds">=0.4.0
    "docrep">=0.3.2
    "entrypoints">=0.4
    "exceptiongroup">=1.1.3
    "executing">=2.0.0
    "fasteners">=0.19
    "fastjsonschema">=2.18.1
    "filelock">=3.12.4
    "Fiona">=1.9.4.post1
    "fonttools">=4.43.1
    "fqdn">=1.5.1
    "frozenlist">=1.4.0
    "fsspec">=2023.9.2
    "geopandas">=0.14.0
    "h5py">=3.9.0
    "igraph">=0.10.8
    "imageio">=2.31.5
    "importlib-metadata">=6.8.0
    "importlib-resources">=6.1.0
    "inflect">=7.0.0
    "ipython">=8.16.1
    "isoduration">=20.11.0
    "jedi">=0.19.1
    "Jinja2">=3.1.2
    "jmespath">=1.0.1
    "joblib">=1.3.2
    "json5">=0.9.14
    "jsonpointer">=2.4
    "jsonschema">=4.19.1
    "jsonschema-specifications">=2023.7.1
    "kiwisolver">=1.4.5
    "lazy_loader">=0.3
    "leidenalg">=0.10.1
    "llvmlite">=0.41.0
    "locket">=1.0.0
    "markdown-it-py">=3.0.0
    "MarkupSafe">=2.1.3
    "matplotlib">=3.8.0
    "matplotlib-inline">=0.1.6
    "matplotlib-scalebar">=0.8.1
    "mdurl">=0.1.2
    "mistune">=3.0.2
    "mpmath">=1.3.0
    "msgpack">=1.0.7
    "multidict">=6.0.4
    "multipledispatch">=1.0.0
    "multiscale_spatial_image">=0.11.2
    "natsort">=8.4.0
    "nbclient">=0.8.0
    "nbconvert">=7.9.2
    "nbformat">=5.9.2
    "nest-asyncio">=1.5.8
    "networkx">=3.1
    "notebook_shim">=0.2.3
    "numba">=0.58.0
    "numcodecs">=0.11.0
    "numpy">=1.23.4
    "ome-zarr">=0.8.2
    "omnipath">=1.0.7
    "overrides">=7.4.0
    "packaging">=23.2
    "pandas">=2.1.1
    "pandocfilters">=1.5.0
    "param">=1.13.0
    "parso">=0.8.3
    "partd">=1.4.1
    "pathtools">=0.1.2
    "patsy">=0.5.3
    "pexpect">=4.8.0
    "pickleshare">=0.7.5
    "Pillow">=10.0.1
    "PIMS">=0.6.1
    "platformdirs">=3.11.0
    "prometheus-client">=0.17.1
    "prompt-toolkit">=3.0.39
    "protobuf">=4.24.4
    "ptyprocess">=0.7.0
    "pure-eval">=0.2.2
    "pyarrow">=13.0.0
    "pycparser">=2.21
    "pyct">=0.5.0
    "pydantic">=1.10.13
    "pygeos">=0.14
    "Pygments">=2.16.1
    "pynndescent">=0.5.10
    "pyparsing">=3.1.1
    "python-dateutil">=2.8.2
    "pyproj">=3.6.1
    "pytz">=2023.3.post1
    "python-json-logger">=2.0.7
    "pyzmq">=25.1.1
    "PyWavelets">=1.4.1
    "rfc3339-validator">=0.1.4
    "referencing">=0.30.2
    "rich">=13.6.0
    "rfc3986-validator">=0.1.1
    "s3fs">=2023.9.2
    "rpds-py">=0.10.4
    "scikit-image">=0.20.0
    "scanpy">=1.9.5
    "scipy">=1.9.1
    "scikit-learn">=1.3.1
    "Send2Trash">=1.8.2
    "seaborn">=0.13.0
    "shapely">=2.0.1
    "session-info">=1.0.0
    "sniffio">=1.3.0
    "slicerator">=1.1.0
    "soupsieve">=2.5
    "sortedcontainers">=2.4.0
    "spatialdata">=0.0.13
    "spatial_image">=0.3.0
    "stack-data">=0.6.3
    "squidpy">=1.3.0
    "stdlib-list">=0.9.0
    "statsmodels">=0.14.0
    "tblib">=2.0.0
    "sympy">=1.12
    "texttable">=1.7.0
    "terminado">=0.17.1
    "tifffile">=2023.9.26
    "threadpoolctl">=3.2.0
    "tomli">=2.0.1
    "tinycss2">=1.2.1
    "torch">=2.1.0
    "toolz">=0.12.0
    "torchaudio">=2.1.0
    "torch_geometric">=2.4.0
    "tornado">=6.3.3
    "torchvision">=0.16.0
    "traitlets">=5.11.2
    "tqdm">=4.66.1
    "typing_extensions">=4.5.0
    "types-python-dateutil">=2.8.19.14
    "umap-learn">=0.5.4
    "tzdata">=2023.3
    "urllib3">=1.26.17
    "uri-template">=1.3.0
    "wandb"
    "validators">=0.22.0
    "webcolors">=1.13
    "wcwidth">=0.2.8
    "websocket-client">=1.6.3
    "webencodings">=0.5.1
    "xarray">=2022.12.0
    "wrapt">=1.15.0
    "xarray-datatree">=0.0.12
    "xarray-dataclasses">=1.6.0
    "xarray-spatial">=0.3.7
    "xarray-schema">=0.0.3
    "zarr">=2.16.1
    "yarl">=1.9.2
    "zipp">=3.17.0
    "zict">=3.0.0
    # for debug logging (referenced from the issue template)
    "session-info"
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "twine>=4.0.2"
]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "sphinx-book-theme>=1.0.0",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-autodoc-typehints",
    "sphinxext-opengraph",
    # For notebooks
    "ipykernel",
    "ipython",
    "sphinx-copybutton",

]
test = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.build.targets.wheel]
packages = ['src/geneGATer']

[tool.coverage.run]
source = ["geneGATer"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib",  # allow using test files with same name
]

[tool.black]
line-length = 120

[tool.ruff]
src = ["src"]
line-length = 120
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb"
]
